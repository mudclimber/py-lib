# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from mudclimber_py_lib.protos import agents_pb2 as mudclimber__py__lib_dot_protos_dot_agents__pb2


class AgentCommsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NewAgent = channel.unary_unary(
                '/hub_protos.agents.AgentComms/NewAgent',
                request_serializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.NewAgentRequest.SerializeToString,
                response_deserializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.NewAgentResponse.FromString,
                )
        self.PingAgent = channel.unary_unary(
                '/hub_protos.agents.AgentComms/PingAgent',
                request_serializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.PingRequest.SerializeToString,
                response_deserializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.PingResponse.FromString,
                )


class AgentCommsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NewAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PingAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentCommsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NewAgent': grpc.unary_unary_rpc_method_handler(
                    servicer.NewAgent,
                    request_deserializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.NewAgentRequest.FromString,
                    response_serializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.NewAgentResponse.SerializeToString,
            ),
            'PingAgent': grpc.unary_unary_rpc_method_handler(
                    servicer.PingAgent,
                    request_deserializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.PingRequest.FromString,
                    response_serializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.PingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hub_protos.agents.AgentComms', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AgentComms(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NewAgent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hub_protos.agents.AgentComms/NewAgent',
            mudclimber__py__lib_dot_protos_dot_agents__pb2.NewAgentRequest.SerializeToString,
            mudclimber__py__lib_dot_protos_dot_agents__pb2.NewAgentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PingAgent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hub_protos.agents.AgentComms/PingAgent',
            mudclimber__py__lib_dot_protos_dot_agents__pb2.PingRequest.SerializeToString,
            mudclimber__py__lib_dot_protos_dot_agents__pb2.PingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AgentStreamsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AgentStream = channel.stream_stream(
                '/hub_protos.agents.AgentStreams/AgentStream',
                request_serializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.AgentStreamRequest.SerializeToString,
                response_deserializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.AgentStreamResponse.FromString,
                )


class AgentStreamsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AgentStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentStreamsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AgentStream': grpc.stream_stream_rpc_method_handler(
                    servicer.AgentStream,
                    request_deserializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.AgentStreamRequest.FromString,
                    response_serializer=mudclimber__py__lib_dot_protos_dot_agents__pb2.AgentStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hub_protos.agents.AgentStreams', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AgentStreams(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AgentStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/hub_protos.agents.AgentStreams/AgentStream',
            mudclimber__py__lib_dot_protos_dot_agents__pb2.AgentStreamRequest.SerializeToString,
            mudclimber__py__lib_dot_protos_dot_agents__pb2.AgentStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
